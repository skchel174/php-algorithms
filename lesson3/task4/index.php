<?php

// Имеем массив:
// [1, 12, 123, 1234, 12345, 123456, 1234567, 12345678, 123456789, 12345678910, 1234567891011...]
// Объеденив все элементы массива вместе, мы получим бесконечную последовательность 
// 11212312341234512345612345671234567812345678912345678910...
// На вход метода, который Вам предстоит написать, будет подано число n, лежащее в пределах от 1 <= n <= 10**18,
// указывающее номер цифры в вышеупомянутом бесконечном числе. 
// Необходимо вывести цифру, соответствующую номеру n

// $n = 1, ответ: 1
// $n = 2, ответ: 1
// $n = 3, ответ: 2
// $n = 100, ответ: 1
// $n = 2100, ответ: 2
// $n = 31000, ответ: 2
// $n = 999999999999999999, ответ: 4
// $n = 1000000000000000000, ответ: 1
// $n = 999999999999999993, ответ: 7

$n = 31000;
echo f($n);

// решил простым перебором, на больших числах работает долго (сек 16 - 18)

function f($n) {
    // если n меньше 45, возвращаем его позицию
    if ($n <= 45) {
        return substr('112123123412345123456123456712345678123456789', $n - 1, 1);
    }
    
    // начало диапазона при n больше 45
    $res = 45;
    // количество итераций до следующего разряда
    $lim = 90;
    // постоянная величина, к которой каждую итерацию прибавляем растущее в арифметической прогрессии значение
    $base = 9;

    // внешний цикл увеличивает lim в 10 раз 
    // в первой итерации 9 увеличивается на шаг, равный 2, растущий в арифметической прогрессии,
    // во второй итерации шаг равен 3 и т.д.

    while (true) {
        // длина шага
        $step = strlen($lim);

        // во внутреннем цикле n уменьшаем на растущий с каждой итерацией числовой ряд
        // если n меньше чем очередной ряд, 
        // его значение передается в функцию f2

        for ($i = 0; $i < $lim; $i++) {
            $n -= $res;

            $j += $step;
            $res = $base + $j;

            if ($n < $res) {
                return f2($n);
            }
        }
        
        $lim *= 10;
    }
}

// Функция принимает числовой ряд, недостающий до ичкомого значения,
// проходит в цикле по всем числам, суммируя количество цифр в числах счетчика.
// Если общее количество чисел сравнивается с искомым значением, 
// выводим последнию цифру числа счетчика.

function f2($n) {
    $counter = 0;

    while ($length < $n) {
        $counter++;
        $length += strlen($counter);
    }

    $res = $length - $n + 1;

    return substr($counter, -$res, 1);
}
