<?php

// 2. Определить сложность следующих алгоритмов. Сколько произойдет итераций?

// Сложность: O(n^2). Внешний цикл имеет 10000 итераций. Вложенный цикл - 14 итераций, 
// т.к. счетчик в каждой итерации увеличивается в 2 раза 1, 2, 4, 8, 16... 8192.
// Таким образом, в каждой итерации внешнего цикла произвойдет 14 итераций вложенного.
// Всего 14000 итераций

$n = 10000;
$array[] = [];
for ($i = 0; $i < $n; $i++) {
    for ($j = 1; $j < $n; $j *= 2) {
        $array[$i][$j] = true;
    } 
}

// Сложность: O(n*log(n)). Внешний цикл имеет 5000 итераций, т.к. шаг счетчика равне 2.
// Количество итераций вложенного цикла будет сокращаться на 2 с каждой итерацией внешнего цикла.
// Таким образом, если я правильно думаю, общее количество итераций составит 5000 * 5000 = 25.000.000

$n = 10000;
$array[] = [];
for ($i = 0; $i < $n; $i += 2) {
    for ($j = $i; $j < $n; $j++) {
        $array[$i][$j] = true;
    } 
}

print_r($array);

// Наверное, это неправильное решение, но, кажется, $n никогда не будет меньше или равно 0.
// Если $n в цикле for получит значение 1, $j ткже получит значение 1. 
// Условие $j < $n не выполнится, $n останется равным 1, и цикл while не прекратится.

$n = 10000;
foo($n);

function foo($n) {
    while ($n > 0) {
        for ($j = sqrt($n); $j < $n; $j++) {
            $n--;
            foo($n);
        } 
    }
}
